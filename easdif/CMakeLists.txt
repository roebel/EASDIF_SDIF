
IF(WIN32)
  ADD_DEFINITIONS(-DDO_EXPORT_SDIF=1)
ENDIF(WIN32)

# easdif_version.hpp is installed as well but in ../CMakeLists.txt
SET(noinst_HEADERS ${CMAKE_CURRENT_BINARY_DIR}/easdifintro.hpp ${CMAKE_CURRENT_BINARY_DIR}/easdif_config.hpp)
SET(HEADERS  easdif.h easdif_exports.hpp  sdifentity.hpp sdifexception.hpp sdif_frame.hpp sdifinit.hpp sdifmatrixdata.hpp sdifmatrixdatainterface.hpp sdif_matrix.hpp sdifnamevaluetable.hpp ${CMAKE_CURRENT_BINARY_DIR}/easdif_version.hpp )

GET_FILENAME_COMPONENT(normalize_path ${CMAKE_CURRENT_SOURCE_DIR}/../SDIF/sdif ABSOLUTE)
GET_DIRECTORY_PROPERTY(sdif_C_SOURCES DIRECTORY ${normalize_path} DEFINITION sdif_SOURCES)
SET(easdif_SOURCES sdifentity.cpp  sdifexception.cpp sdif_matrix.cpp sdif_frame.cpp sdifnamevaluetable.cpp sdifinit.cpp)

SET(sdif_CXX_SOURCES)
FOREACH( file ${sdif_C_SOURCES})
  GET_FILENAME_COMPONENT(filetmp ${file} NAME_WE)
  SET(filecxx ${CMAKE_CURRENT_BINARY_DIR}/${filetmp}.cxx)
  CONFIGURE_FILE(${file} ${filecxx} COPYONLY)
  LIST(APPEND sdif_CXX_SOURCES ${filecxx})
ENDFOREACH( file ${sdif_C_SOURCES})


GET_FILENAME_COMPONENT(normalize_path ${CMAKE_CURRENT_SOURCE_DIR}/../SDIF ABSOLUTE)
GET_DIRECTORY_PROPERTY(sdif_version DIRECTORY ${normalize_path} DEFINITION  SDIF_VERSION)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../SDIF/sdif)
IF(EASDIF_BUILD_STATIC)
  ADD_LIBRARY(Easdif_static_pic${DEBUGEXT} STATIC  ${easdif_SOURCES} ${sdif_CXX_SOURCES}  )
  IF(CMAKE_COMPILER_IS_GNUCXX)
    SET_TARGET_PROPERTIES(Easdif_static_pic${DEBUGEXT} PROPERTIES COMPILE_FLAGS "-fPIC -DEASDIF_IS_STATIC")
  ENDIF(CMAKE_COMPILER_IS_GNUCXX)
  ADD_LIBRARY(Easdif_static${DEBUGEXT} STATIC  ${easdif_SOURCES} ${sdif_CXX_SOURCES}  )
  SET_TARGET_PROPERTIES(Easdif_static${DEBUGEXT} PROPERTIES COMPILE_FLAGS "-DEASDIF_IS_STATIC")
ENDIF(EASDIF_BUILD_STATIC)
ADD_LIBRARY(Easdif${DEBUGEXT} SHARED ${easdif_SOURCES} ${sdif_CXX_SOURCES} )


SET(VERSION "${EASDIF_VERSION_MAJ}.${EASDIF_VERSION_MIN}.${EASDIF_VERSION_RELEASE}")

FILE(READ ${CMAKE_CURRENT_SOURCE_DIR}/easdif_config.hpp.in CONFIG)
STRING(REGEX REPLACE "#undef[ \t]*\([^ \t\n\r]*\)" "#cmakedefine \\1 @\\1@" EASDIFCMCONFIG ${CONFIG})

STRING(CONFIGURE ${EASDIFCMCONFIG} EASDIFCMCONFIGURED)
IF(EXISTS  ${CMAKE_CURRENT_BINARY_DIR}/easdif_config.hpp)
  FILE(READ ${CMAKE_CURRENT_BINARY_DIR}/easdif_config.hpp CURRENTCONFIG)
ENDIF(EXISTS  ${CMAKE_CURRENT_BINARY_DIR}/easdif_config.hpp)

IF(NOT "${CURRENTCONFIG}" STREQUAL "${EASDIFCMCONFIGURED}")
  MESSAGE(STATUS "Writing Easdif config")
  FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/easdif_config.hpp ${EASDIFCMCONFIGURED})
ENDIF(NOT "${CURRENTCONFIG}" STREQUAL "${EASDIFCMCONFIGURED}")

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/easdif_version.hpp.in ${CMAKE_CURRENT_BINARY_DIR}/easdif_version.hpp)

SET(prefix ${CMAKE_INSTALL_PREFIX})
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/easdifintro.hpp.in ${CMAKE_CURRENT_BINARY_DIR}/easdifintro.hpp)

IF(CYGWIN)
  SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES  LINKER_LANGUAGE CXX)
ELSE(CYGWIN)
  SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} LINKER_LANGUAGE CXX)
ENDIF(CYGWIN)

IF(APPLE AND NOT EASDIF_BUILD_STATIC)
  IF(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
    SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES INSTALL_NAME_DIR  ${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR} )
  ELSE(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
    SET(INSTALLED_TARGET_NAME ${CMAKE_INSTALL_PREFIX}/${INSTALL_LIB_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}Easdif${DEBUGEXT}${CMAKE_SHARED_LIBRARY_SUFFIX}.${EASDIF_VERSION})
    CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/../SDIF/cmModules/SET_INSTALL_NAME.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/SET_INSTALL_NAME.cmake)
    SET_TARGET_PROPERTIES(Easdif${DEBUGEXT} PROPERTIES POST_INSTALL_SCRIPT  ${CMAKE_CURRENT_BINARY_DIR}/SET_INSTALL_NAME.cmake )
  ENDIF(CMAKE_MINOR_VERSION GREATER 3 AND CMAKE_MAJOR_VERSION EQUAL 2)
ENDIF(APPLE AND NOT EASDIF_BUILD_STATIC)


#SET_TARGET_PROPERTIES(Easdif_static${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} POST_INSTALL_SCRIPT ${CMAKE_BINARY_DIR}/easdif/RenameInstalledStaticLib.cmake )
#SET_TARGET_PROPERTIES(Easdif_static${DEBUGEXT} PROPERTIES VERSION ${EASDIF_VERSION} OUTPUT_NAME Easdif${DEBUGEXT})
INSTALL(TARGETS  Easdif${DEBUGEXT} RUNTIME DESTINATION  ${INSTALL_BIN_DIR} LIBRARY DESTINATION   ${INSTALL_LIB_DIR} ARCHIVE DESTINATION  ${INSTALL_LIB_DIR})
INSTALL(FILES  ${HEADERS} DESTINATION ${INSTALL_INC_DIR}/easdif )



#prevent name clash between import library
#IF(NOT WIN32)
#  SET(BEFORE_RENAME "Easdif_static${DEBUGEXT}")
#  SET(AFTER_RENAME "Easdif${DEBUGEXT}")
#  CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/../cmModules/RenameInstalledStaticLib.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/RenameInstalledStaticLib.cmake @ONLY)
#ENDIF(NOT WIN32)

INCLUDE(STORE_FILES_LIST)
STORE_FILES_LIST(srcDOCFILES ${SOURCES} ${HEADERS}  ${noinst_HEADERS})
