FIND_PACKAGE(Java)
IF(JAVA_RUNTIME)
  IF(NOT JAVA_COMPILE)
    FIND_PROGRAM(JAVA_COMPILE gcj)
  ENDIF(NOT JAVA_COMPILE)
  SET(INTERFACE_SRC ${CMAKE_CURRENT_SOURCE_DIR}/easdif-java.i)
ENDIF(JAVA_RUNTIME)
SET_SOURCE_FILES_PROPERTIES(${INTERFACE_SRC} PROPERTIES CPLUSPLUS ON)

SET(CMAKE_SWIG_FLAGS "-I${CMAKE_CURRENT_BINARY_DIR}" "-I${CMAKE_CURRENT_SOURCE_DIR}")
SWIG_ADD_MODULE(eaSDIF java  ${INTERFACE_SRC}     )
SWIG_LINK_LIBRARIES(eaSDIF ${PYTHON_LIBRARIES} Easdif${DEBUGEXT})
ADD_CUSTOM_TARGET(javaswig)
ADD_DEPENDENCIES(javaswig ${SWIG_MODULE_eaSDIF_REAL_NAME})

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/main.java.in ${CMAKE_CURRENT_BINARY_DIR}/main.java)
IF( EXISTS ${JAVA_RUNTIME})
  IF( EXISTS ${JAVA_COMPILE})
    IF(APPLE)
      SET(LOADPATH DYLD_LIBRARY_PATH)
    ELSE (APPLE)
      IF(WIN32)
        SET(LOADPATH PATH)
      ELSE(WIN32)
        IF ( "${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
          SET(LOADPATH LD_LIBRARY_PATH)
        ENDIF( "${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
        IF ( "${CMAKE_SYSTEM_NAME}" MATCHES "FreeBSD")
          SET(LOADPATH DYLD_LIBRARY_PATH)
        ENDIF( "${CMAKE_SYSTEM_NAME}" MATCHES "FreeBSD")
      ENDIF(WIN32)
    ENDIF(APPLE)

    ADD_CUSTOM_TARGET(checkswigjava
      COMMAND echo Testing java swig interface
      COMMAND ${CMAKE_COMMAND} -E copy eaSDIF${CMAKE_SHARED_LIBRARY_SUFFIX} ${CMAKE_SHARED_LIBRARY_PREFIX}eaSDIF${CMAKE_SHARED_LIBRARY_SUFFIX}
      COMMAND ${JAVA_COMPILE} ${CMAKE_CURRENT_BINARY_DIR}/*.java
      COMMAND ${LOADPATH}=. ${JAVA_RUNTIME} ${CMAKE_CURRENT_BINARY_DIR}/main)
    ADD_DEPENDENCIES(checkswigjava javaswig)
    ADD_DEPENDENCIES(checkswig checkswigjava)
  ENDIF( EXISTS ${JAVA_COMPILE})
ENDIF( EXISTS ${JAVA_RUNTIME})

