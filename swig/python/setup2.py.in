#!/usr/bin/env /opt/local/bin/python

from distutils.core import *
from distutils      import sysconfig

# Third-party modules - we depend on numpy for everything
import numpy

# Obtain the numpy include directory.  This logic works across numpy versions.
try:
    numpy_include = numpy.get_include()
except AttributeError:
    numpy_include = numpy.get_numpy_include()

# inplace extension module
eaSDIF_mod = Extension("_eaSDIF",
                       ["${CMAKE_CURRENT_SOURCE_DIR}/easdif-python.i"],
                       include_dirs = [numpy_include, "@CMAKE_BINARY_DIR@", "${CMAKE_BINARY_DIR}/SDIF/sdifconfig",
                                       "${CMAKE_SOURCE_DIR}"],
                       library_dirs=["@CMAKE_ARCHIVE_OUTPUT_DIRECTORY@"],
                       define_macros=[('USE_NUMPY',1),
                                      ('SWIG_FILE_WITH_INIT', 1)],
                       swig_opts =["-c++", "-outdir", "${CMAKE_CURRENT_BINARY_DIR}", "-I${CMAKE_CURRENT_BINARY_DIR}","-I${CMAKE_CURRENT_SOURCE_DIR}", "-DSWIG_FILE_WITH_INIT=1", "-DUSE_NUMPY"],
                       extra_compile_args = "@CMAKE_CXX_FLAGS@".split(),
                       libraries=['Easdif_static_pic${DEBUGEXT}'],
    )

setup(name='eaSDIF',
      version="${EASDIF_VERSION}",
      description='SDIF file handling support for python',
      author='axel roebel',
      author_email='sdif@ircam.fr',
      url='http://sourceforge.net/projects/sdif/',
      license='LGPL',
      ext_modules = [eaSDIF_mod],
     )
